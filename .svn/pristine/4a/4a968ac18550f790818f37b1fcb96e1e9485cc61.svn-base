package br.ufpi.estagio.cge.dao;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;

import br.ufpi.estagio.cge.dao.conexaoSGBD.Conexao;

public class InformacoesCategoriaDAO {

	private static void createTable() throws SQLException{
		String criarTabela = "CREATE TABLE IF NOT EXISTS informacoesCategoria ("
				+ "id INT(5) AUTO_INCREMENT PRIMARY KEY,"
				+ "categoria_descricao VARCHAR(50) NOT NULL,"
				+ "referencia VARCHAR(50) NOT NULL,"
				+ "soma_salarial DECIMAL(20),"
				+ "qnt_servidores DECIMAL(20))"
				+ "ENGINE=MyISAM";
		PreparedStatement statement = Conexao.getConnection().prepareStatement(criarTabela);
		statement.execute();
		statement.close();
	}
	
	public static ArrayList<String> quantidadeServidores(ArrayList<String> cargos, String data) throws SQLException{
		
		Statement st = Conexao.getConnection().createStatement();
		String cmd = "SELECT  sum(soma_salarial)/sum(qnt_servidores) as qnt, categoria_descricao FROM informacoesCategoria where referencia"
				+ " like '"+data+"%' and (categoria_descricao like '"+ cargos.get(0)+"' "
						+ "or categoria_descricao like '"+cargos.get(1)+"'"
								+ " or categoria_descricao like '"+cargos.get(2)+"') group by categoria_descricao order by qnt";
		
		ResultSet rs = st.executeQuery(cmd);

		ArrayList<String> aux = new ArrayList();
		while (rs.next()) {
		 aux.add(rs.getString("categoria_descricao"));
			
		}
		return aux;
		
	}
	
	public static double buscarMedia(String cat, String referencia) throws SQLException{
		
		InformacoesCategoriaDAO.createTable();
		
		Statement st = Conexao.getConnection().createStatement();
		String cmd = "SELECT soma_salarial,qnt_servidores FROM informacoesCategoria WHERE categoria_descricao like '"+cat+"' and"
				+ " referencia like '"+referencia+"'";
		
		
		ResultSet rs = st.executeQuery(cmd);

		
		while (rs.next()) {
			 double media =  rs.getDouble("soma_salarial")/rs.getInt("qnt_servidores");
			 st.close();
			 return media;
		}
		
		st.close();
		return -1;
	}
	
	public static int buscarQuantidade(String cat, String referencia) throws SQLException{
		
		InformacoesCategoriaDAO.createTable();
		
		Statement st = Conexao.getConnection().createStatement();
		String cmd = "SELECT qnt_servidores FROM informacoesCategoria WHERE categoria_descricao like '"+cat+"' and"
				+ " referencia like '"+referencia+"'";
		
		
		ResultSet rs = st.executeQuery(cmd);

		
		while (rs.next()) {
			 int qnt =  rs.getInt("qnt_servidores");
			 st.close();
			 return qnt;
		}
		st.close();
		return -1;
	}

	public static void inserir(String cat, String data, double soma, int quantidade) throws SQLException {
		
		String inserir = "insert into informacoesCategoria values (0, ?, ?, ?, ?)";

		PreparedStatement statement = Conexao.getConnection().prepareStatement(inserir);

		statement.setString(1, cat);
		statement.setString(2, data);
		statement.setDouble(3, soma);
		statement.setInt(4, quantidade);
		
		
		statement.execute();
		statement.close();
	}
	
	public static ArrayList<String> listarCategoriasDecrescente(String data) throws SQLException{

		Statement st = Conexao.getConnection().createStatement();
		String cmd = "SELECT categoria_descricao, soma_salarial/qnt_servidores as media "
				+ "FROM informacoesCategoria WHERE referencia like '"+data+"' order by media";

		ResultSet rs = st.executeQuery(cmd);

		ArrayList<String> aux = new ArrayList();
		while (rs.next()) {
			aux.add(rs.getString("categoria_descricao"));

		}
		return aux;

	}

}
